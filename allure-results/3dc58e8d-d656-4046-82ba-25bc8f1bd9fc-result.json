{"name": "Test creating an order and getting the order list", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to accept order: {\"code\":404,\"message\":\"Заказа с таким id не существует\"}\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <tests.orders.test_list_of_orders.TestOrders object at 0x000001CD6B8C1310>, password = '1234', first_name = 'saske'\norder_data = {'address': 'Konoha, 142 apt.', 'color': ['BLACK'], 'comment': 'Saske, come back to Konoha', 'deliveryDate': '2020-06-06', ...}\nexpected_status_code = 200\n\n    @pytest.mark.parametrize(\"password, first_name, order_data, expected_status_code\", [\n        (\"1234\", \"saske\", {\n            \"firstName\": \"Naruto\",\n            \"lastName\": \"Uchiha\",\n            \"address\": \"Konoha, 142 apt.\",\n            \"metroStation\": 4,\n            \"phone\": \"+7 800 355 35 35\",\n            \"rentTime\": 5,\n            \"deliveryDate\": \"2020-06-06\",\n            \"comment\": \"Saske, come back to Konoha\",\n            \"color\": [\"BLACK\"]\n        }, 200)\n    ])\n    @allure.feature(\"Order Management\")\n    @allure.story(\"Create order and get list\")\n    @allure.title(\"Test creating an order and getting the order list\")\n    def test_create_order_and_get_list(self, password, first_name, order_data, expected_status_code):\n        login = generate_random_login()\n        courier_data = {\n            \"login\": login,\n            \"password\": password,\n            \"firstName\": first_name\n        }\n        print(f\"Creating courier with data: {courier_data}\")\n        response_create_courier = requests.post(f\"{BASE_URL}{COURIER_URL}\", json=courier_data)\n        print(f\"Create courier response: {response_create_courier.status_code} - {response_create_courier.text}\")\n        assert response_create_courier.status_code == 201, f\"Failed to create courier: {response_create_courier.text}\"\n    \n        print(f\"Creating order with data: {order_data}\")\n        response_create_order = requests.post(f\"{BASE_URL}{ORDERS_URL}\", json=order_data)\n        print(f\"Create order response: {response_create_order.status_code} - {response_create_order.text}\")\n        assert response_create_order.status_code == 201, f\"Failed to create order: {response_create_order.text}\"\n        order_id = response_create_order.json().get(\"track\")\n        assert order_id, \"Order track was not returned\"\n    \n        login_data = {\n            \"login\": login,\n            \"password\": password\n        }\n        print(f\"Logging in with data: {login_data}\")\n        response_login_courier = requests.post(f\"{BASE_URL}{COURIER_URL}/login\", json=login_data)\n        print(f\"Login response: {response_login_courier.status_code} - {response_login_courier.text}\")\n        assert response_login_courier.status_code == 200, f\"Failed to login courier: {response_login_courier.text}\"\n    \n        courier_id = response_login_courier.json().get(\"id\")\n        assert courier_id, \"Courier ID was not returned after login\"\n        print(f\"Courier ID after login: {courier_id}\")\n    \n        response_accept_order = requests.put(f\"{BASE_URL}{ORDERS_URL}/accept/{order_id}?courierId={courier_id}\")\n>       assert response_accept_order.status_code == 200, f\"Failed to accept order: {response_accept_order.text}\"\nE       AssertionError: Failed to accept order: {\"code\":404,\"message\":\"Заказа с таким id не существует\"}\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\orders\\test_list_of_orders.py:57: AssertionError"}, "attachments": [{"name": "stdout", "source": "44e178ce-7ff2-4efc-9550-f272e896c558-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "password", "value": "'1234'"}, {"name": "first_name", "value": "'saske'"}, {"name": "order_data", "value": "{'firstName': 'Naruto', 'lastName': 'Uchiha', 'address': 'Konoha, 142 apt.', 'metroStation': 4, 'phone': '+7 800 355 35 35', 'rentTime': 5, 'deliveryDate': '2020-06-06', 'comment': 'Saske, come back to Konoha', 'color': ['BLACK']}"}, {"name": "expected_status_code", "value": "200"}], "start": 1734703337595, "stop": 1734703345350, "uuid": "6c1a2687-f982-42d2-88ff-0ac957cbf9c2", "historyId": "e2ba00ebe36dd9e185d6163673a8c264", "testCaseId": "f09f88a5f8044c0ee514a48806732dc3", "fullName": "tests.orders.test_list_of_orders.TestOrders#test_create_order_and_get_list", "labels": [{"name": "story", "value": "Create order and get list"}, {"name": "feature", "value": "Order Management"}, {"name": "parentSuite", "value": "tests.orders"}, {"name": "suite", "value": "test_list_of_orders"}, {"name": "subSuite", "value": "TestOrders"}, {"name": "host", "value": "KZALANB019"}, {"name": "thread", "value": "16012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.orders.test_list_of_orders"}]}